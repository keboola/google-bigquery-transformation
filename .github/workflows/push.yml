name: 'GitHub Actions'
'on':
    - push
concurrency: 'ci-${{ github.ref }}'
env:
    APP_IMAGE: keboola/google-bigquery-transformation
    KBC_DEVELOPERPORTAL_VENDOR: keboola
    KBC_DEVELOPERPORTAL_APP: keboola.google-bigquery-transformation
    KBC_DEVELOPERPORTAL_USERNAME: keboola+google_bigquery_transformation_gha
    KBC_DEVELOPERPORTAL_PASSWORD: '${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}'
    KBC_DATA_TYPE_SUPPORT: "none"

    DOCKERHUB_USER: '${{ secrets.DOCKERHUB_USER }}'
    DOCKERHUB_TOKEN: '${{ secrets.DOCKERHUB_TOKEN }}'

    BQ_DATASET: WORKSPACE_928415912
    BQ_LOCATION: US
    BQ_CREDENTIALS_TYPE: service_account
    BQ_CREDENTIALS_PROJECT_ID: sapi-9452
    BQ_CREDENTIALS_PRIVATE_KEY_ID: '${{ secrets.BQ_CREDENTIALS_PRIVATE_KEY_ID }}'
    BQ_CREDENTIALS_PRIVATE_KEY: '${{ secrets.BQ_CREDENTIALS_PRIVATE_KEY }}'
    BQ_CREDENTIALS_CLIENT_EMAIL: '${{ secrets.BQ_CREDENTIALS_CLIENT_EMAIL }}'
    BQ_CREDENTIALS_CLIENT_ID: '${{ secrets.BQ_CREDENTIALS_CLIENT_ID }}'
    BQ_CREDENTIALS_AUTH_URI: https://accounts.google.com/o/oauth2/auth
    BQ_CREDENTIALS_TOKEN_URI: https://oauth2.googleapis.com/token
    BQ_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL: https://www.googleapis.com/oauth2/v1/certs
    BQ_CREDENTIALS_CLIENT_X509_CERT_URL: https://www.googleapis.com/robot/v1/metadata/x509/sapi-workspace-928415912%40sapi-9452.iam.gserviceaccount.com

    KBC_RUNID: '123456789'
    KBC_STORAGE_TOKEN: '${{ secrets.KBC_STORAGE_TOKEN }}'
    KBC_TEST_PROJECT_URL: 'connection.europe-west3.gcp.keboola.com'
    KBC_TEST_PROJECT_CONFIGS: '35542'
jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            app_image_tag: '${{ steps.tag.outputs.app_image_tag }}'
            is_semantic_tag: '${{ steps.tag.outputs.is_semantic_tag }}'
        steps:
            -
                name: 'Check out the repo'
                uses: actions/checkout@v2
            -
                name: 'Print Docker version'
                run: 'docker -v'
            -
                name: 'Docker login'
                if: env.DOCKERHUB_TOKEN
                run: 'docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"'
            -
                name: 'Build image'
                run: 'docker build -t $APP_IMAGE .'
            -
                name: 'Set image tag'
                id: tag
                run: |
                    TAG="${GITHUB_REF##*/}"
                    IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
                    echo "Tag = '$TAG', is semantic tag = '$IS_SEMANTIC_TAG'"
                    echo "::set-output name=app_image_tag::$TAG"
                    echo "::set-output name=is_semantic_tag::$IS_SEMANTIC_TAG"
            -
                name: 'Push image to ECR'
                uses: keboola/action-push-to-ecr@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ steps.tag.outputs.app_image_tag }}'
                    push_latest: '${{ steps.tag.outputs.is_semantic_tag }}'
                    source_image: '${{ env.APP_IMAGE}}'
    tests:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: 'Check out the repo'
                uses: actions/checkout@v2
            -
                name: 'Pull image from ECR'
                uses: keboola/action-pull-from-ecr@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
                    target_image: '${{ env.APP_IMAGE}}'
                    tag_as_latest: true
            -
                name: 'Run tests'
                run: | 
                    docker run \
                    -e BQ_DATASET \
                    -e BQ_LOCATION \
                    -e BQ_CREDENTIALS_TYPE \
                    -e BQ_CREDENTIALS_PROJECT_ID \
                    -e BQ_CREDENTIALS_PRIVATE_KEY_ID \
                    -e BQ_CREDENTIALS_PRIVATE_KEY \
                    -e BQ_CREDENTIALS_CLIENT_EMAIL \
                    -e BQ_CREDENTIALS_CLIENT_ID \
                    -e BQ_CREDENTIALS_AUTH_URI \
                    -e BQ_CREDENTIALS_TOKEN_URI \
                    -e BQ_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL \
                    -e BQ_CREDENTIALS_CLIENT_X509_CERT_URL \
                    -e KBC_RUNID \
                    -e KBC_DATA_TYPE_SUPPORT \
                    ${{env.APP_IMAGE}} composer ci
    tests-in-kbc:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: 'Run KBC test jobs'
                if: 'env.KBC_STORAGE_TOKEN && env.KBC_TEST_PROJECT_CONFIGS'
                uses: keboola/action-run-configs-parallel@master
                with:
                    host: '${{ env.KBC_TEST_PROJECT_URL }}'
                    token: '${{ env.KBC_STORAGE_TOKEN }}'
                    componentId: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
                    configs: '${{ env.KBC_TEST_PROJECT_CONFIGS }}'
    deploy:
        needs:
            - build
            - tests
            - tests-in-kbc
        runs-on: ubuntu-latest
        if: 'startsWith(github.ref, ''refs/tags/'') && needs.build.outputs.is_semantic_tag == ''true'''
        steps:
            -
                name: 'Set tag in the Developer Portal'
                uses: keboola/action-set-tag-developer-portal@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
